@256
D=A
@SP
M=D
//call Sys.init 0
@returnLabelIdx0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Sys.init
@Sys.init
0;JMP
(returnLabelIdx0)
//function Sys.init 
(Sys.init)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@0
D=A
(loopIdx1)
@endLoopIdx1
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx1
0;JMP
(endLoopIdx1)
//push constant 4000
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
//push pointer 0
@0
D=A
@THIS
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 5000
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
//push pointer 1
@1
D=A
@THIS
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//call Sys.main 0
@returnLabelIdx2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Sys.main
@Sys.main
0;JMP
(returnLabelIdx2)
//push temp 1
@1
D=A
@5
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
(LOOP)
//goto LOOP
@LOOP
0;JMP
//function Sys.main 
(Sys.main)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@5
D=A
(loopIdx3)
@endLoopIdx3
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx3
0;JMP
(endLoopIdx3)
//push constant 4001
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
//push pointer 0
@0
D=A
@THIS
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 5001
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
//push pointer 1
@1
D=A
@THIS
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.add12 1
@returnLabelIdx4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Sys.add12
@Sys.add12
0;JMP
(returnLabelIdx4)
//push temp 0
@0
D=A
@5
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push local 0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
//return
//calcReturnAddrPointer
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
//pop returnValue in @Arg
@SP
AM=M-1
D=M
@ARG
A=M
M=D
//Set SP
D=A
@SP
M=D+1
//Set THAT
@LCL
AM=M-1
D=M
@THAT
M=D
//Set THIS
@LCL
AM=M-1
D=M
@THIS
M=D
//Set ARG
@LCL
AM=M-1
D=M
@ARG
M=D
//Set LCL
@LCL
A=M-1
D=M
@LCL
M=D
//goto returnAddr
@R14
A=M
0;JMP
//function Sys.add12 
(Sys.add12)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@0
D=A
(loopIdx5)
@endLoopIdx5
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx5
0;JMP
(endLoopIdx5)
//push constant 4002
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
//push pointer 0
@0
D=A
@THIS
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 5002
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
//push pointer 1
@1
D=A
@THIS
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=D+A
@SP
A=M
M=D
@SP
M=M+1
//return
//calcReturnAddrPointer
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
//pop returnValue in @Arg
@SP
AM=M-1
D=M
@ARG
A=M
M=D
//Set SP
D=A
@SP
M=D+1
//Set THAT
@LCL
AM=M-1
D=M
@THAT
M=D
//Set THIS
@LCL
AM=M-1
D=M
@THIS
M=D
//Set ARG
@LCL
AM=M-1
D=M
@ARG
M=D
//Set LCL
@LCL
A=M-1
D=M
@LCL
M=D
//goto returnAddr
@R14
A=M
0;JMP
