@256
D=A
@SP
M=D
//call Sys.init 0
@returnLabelIdx0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Sys.init
@Sys.init
0;JMP
(returnLabelIdx0)
//function Class1.set 
(Class1.set)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@0
D=A
(loopIdx1)
@endLoopIdx1
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx1
0;JMP
(endLoopIdx1)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static Class1.0
@Class1.0
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static Class1.1
@Class1.1
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
//calcReturnAddrPointer
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
//pop returnValue in @Arg
@SP
AM=M-1
D=M
@ARG
A=M
M=D
//Set SP
D=A
@SP
M=D+1
//Set THAT
@LCL
AM=M-1
D=M
@THAT
M=D
//Set THIS
@LCL
AM=M-1
D=M
@THIS
M=D
//Set ARG
@LCL
AM=M-1
D=M
@ARG
M=D
//Set LCL
@LCL
A=M-1
D=M
@LCL
M=D
//goto returnAddr
@R14
A=M
0;JMP
//function Class1.get 
(Class1.get)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@0
D=A
(loopIdx2)
@endLoopIdx2
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx2
0;JMP
(endLoopIdx2)
//push static Class1.0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static Class1.1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
//return
//calcReturnAddrPointer
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
//pop returnValue in @Arg
@SP
AM=M-1
D=M
@ARG
A=M
M=D
//Set SP
D=A
@SP
M=D+1
//Set THAT
@LCL
AM=M-1
D=M
@THAT
M=D
//Set THIS
@LCL
AM=M-1
D=M
@THIS
M=D
//Set ARG
@LCL
AM=M-1
D=M
@ARG
M=D
//Set LCL
@LCL
A=M-1
D=M
@LCL
M=D
//goto returnAddr
@R14
A=M
0;JMP
//function Class2.set 
(Class2.set)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@0
D=A
(loopIdx3)
@endLoopIdx3
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx3
0;JMP
(endLoopIdx3)
//push argument 0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static Class2.0
@Class2.0
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push argument 1
@1
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static Class2.1
@Class2.1
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
//calcReturnAddrPointer
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
//pop returnValue in @Arg
@SP
AM=M-1
D=M
@ARG
A=M
M=D
//Set SP
D=A
@SP
M=D+1
//Set THAT
@LCL
AM=M-1
D=M
@THAT
M=D
//Set THIS
@LCL
AM=M-1
D=M
@THIS
M=D
//Set ARG
@LCL
AM=M-1
D=M
@ARG
M=D
//Set LCL
@LCL
A=M-1
D=M
@LCL
M=D
//goto returnAddr
@R14
A=M
0;JMP
//function Class2.get 
(Class2.get)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@0
D=A
(loopIdx4)
@endLoopIdx4
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx4
0;JMP
(endLoopIdx4)
//push static Class2.0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static Class2.1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
@SP
AM=M-1
A=M
D=A-D
@SP
A=M
M=D
@SP
M=M+1
//return
//calcReturnAddrPointer
@LCL
D=M
@5
A=D-A
D=M
@R14
M=D
//pop returnValue in @Arg
@SP
AM=M-1
D=M
@ARG
A=M
M=D
//Set SP
D=A
@SP
M=D+1
//Set THAT
@LCL
AM=M-1
D=M
@THAT
M=D
//Set THIS
@LCL
AM=M-1
D=M
@THIS
M=D
//Set ARG
@LCL
AM=M-1
D=M
@ARG
M=D
//Set LCL
@LCL
A=M-1
D=M
@LCL
M=D
//goto returnAddr
@R14
A=M
0;JMP
//function Sys.init 
(Sys.init)
//push nVars 0s to @LCL using SP=LCL
@SP
D=M
@LCL
M=D
@0
D=A
(loopIdx5)
@endLoopIdx5
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@loopIdx5
0;JMP
(endLoopIdx5)
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class1.set 2
@returnLabelIdx6
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Class1.set
@Class1.set
0;JMP
(returnLabelIdx6)
//push temp 0
@0
D=A
@5
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class2.set 2
@returnLabelIdx7
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@2
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Class2.set
@Class2.set
0;JMP
(returnLabelIdx7)
//push temp 0
@0
D=A
@5
A=A+D
D=A
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
//call Class1.get 0
@returnLabelIdx8
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Class1.get
@Class1.get
0;JMP
(returnLabelIdx8)
//call Class2.get 0
@returnLabelIdx9
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-5-nArgs
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Class2.get
@Class2.get
0;JMP
(returnLabelIdx9)
(WHILE)
//goto WHILE
@WHILE
0;JMP
